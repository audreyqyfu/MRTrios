% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyzeTrios.R
\name{analyzeTrios}
\alias{analyzeTrios}
\title{A function to infer the causal inference network with confounding variables using MRGN}
\usage{
analyzeTrios(
  TCGA.meth,
  gene.exp,
  cna,
  trios,
  pc.meth,
  pc.gene,
  meth.sig.asso.pcs,
  gene.sig.asso.pcs,
  clinical,
  meth.table,
  gene.table,
  age.col,
  race.col,
  nObs = 30,
  nPCs = 50,
  writeToFile = FALSE,
  file
)
}
\arguments{
\item{TCGA.meth}{Methylation data matrix; probes in rows, individuals in columns}

\item{gene.exp}{Gene Expression data matrix; genes in rows, individuals in columns}

\item{cna}{Copy Number Alteration data matrix; genes in rows, individuals in columns}

\item{trios}{A trios data matrix with 4 columns; gene name, methylation row, cna row, gene expression row}

\item{pc.meth}{PC score matrix for the methylation data}

\item{pc.gene}{PC score matrix for the gene expression data}

\item{meth.sig.asso.pcs}{A list of significantly associated PCs with the methylation data for each trio}

\item{gene.sig.asso.pcs}{A list of significantly associated PCs with the gene expression data for each trio}

\item{clinical}{Clinical data with at least three columns: ID, age, and race}

\item{meth.table}{A indices table to track the changes made to the input methylation data while generating the PCs}

\item{gene.table}{A indices table to track the changes made to the input gene expression data while generating the PCs}

\item{age.col}{The column where the age is located in the clinical data}

\item{race.col}{The column where the race is located in the clinical data}

\item{nObs}{An integer specifying the minimum number of complete observations (no missing values) in a trio}

\item{nPCs}{An integer specifying the cutoff of the principal components to be selected.  For example, if nPCs=50, then the 50th PC and later ones in the score matrix are discarded.  Note that this is not the total number of PCs selected.}

\item{writeToFile}{TRUE if writing the trio analysis result to an external file while the function runs.  FALSE (default) otherwise.  If TRUE, need to specify the external file name.}

\item{file}{Name of the external file to write output to.}
}
\value{
a dataframe of dimension 1 x 16 with the following columns:

index

\if{html}{\out{<div class="sourceCode">}}\preformatted{ index of the trio
}\if{html}{\out{</div>}}

b11

\if{html}{\out{<div class="sourceCode">}}\preformatted{ a binary value. 1 if the conditional test T1 ~ V | \{T2,U\} rejects the null, and 0 otherwise.
}\if{html}{\out{</div>}}

b12

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the binary outcome for the conditional test T1 ~ T2 | \{V,U\}
}\if{html}{\out{</div>}}

b21

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the binary outcome for the conditional test T2 ~ V | \{T1,U\}
}\if{html}{\out{</div>}}

b22

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the binary outcome for the conditional test T2 ~ T1 | \{V,U\}
}\if{html}{\out{</div>}}

V1:T1

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the binary outcome for the marginal test between V1 and T1
}\if{html}{\out{</div>}}

V1:T2

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the binary outcome for the marginal test between V1 and T2
}\if{html}{\out{</div>}}

pb11

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the conditional test T1 ~ V | \{T2,U\}
}\if{html}{\out{</div>}}

pb12

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the conditional test T1 ~ T2 | \{V,U\}
}\if{html}{\out{</div>}}

pb21

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the conditional test T2 ~ V | \{T1,U\}
}\if{html}{\out{</div>}}

pb22

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the conditional test T2 ~ T1 | \{V,U\}
}\if{html}{\out{</div>}}

pV1:T1

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the marginal test between V1 and T1
}\if{html}{\out{</div>}}

pV1:T2

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the p-value for the marginal test between V1 and T2
}\if{html}{\out{</div>}}

Minor.freq

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the calculated frequency of the minor allele of the genetic variant
}\if{html}{\out{</div>}}

Inferred.Model

\if{html}{\out{<div class="sourceCode">}}\preformatted{ a string indicating the inferred model type as returned by class.vec()
}\if{html}{\out{</div>}}

Total.PC.Count

\if{html}{\out{<div class="sourceCode">}}\preformatted{ the number of PCs included in the trio analysis.
}\if{html}{\out{</div>}}
}
\description{
This function uses the trio data matrix with the confounding variables (Principal components and age and race of individuals). It returns the results of the coefficient and marginal test with the inferred model.
}
\examples{
#Find common individuals between the methylation and gene expression datasets
data (cna)
data (meth)
data (gene)
com.ind = intersect(colnames(gene)[3:ncol(gene)], colnames(meth)[5:ncol(meth)])

#match trios using gene name and entrez ID
trios.df = findTrioAll(meth, cna, gene, 5, 3, 3)

#match additional entries in the CNA column of trios data using the package "org.Hs.eg.db"
result = addDupsCNA(trios.df, cna)

#initial trios data with entries in the CNA column filled in after matching
result[[1]]

#additional trios data for genes that were matched and had multiple entrez id matches in the CNA data
result[[2]]

#use the function to match additional entries in the gene expression column of trios data using the package "org.Hs.eg.db"
#It also merges the intial and additional trios data (res[[1]] and res[[2]]) and returns one data matrix
final.trios.df = addDupsGENE(result[[1]], result[[2]], gene)
final.trios.df

#generate the indices tables
gene.table.pos = findIndex(gene, 3, 1, clinical.pos[,1], com.ind)
meth.table.pos = findIndex(meth, 3, 1, clinical.pos[,1], com.ind)

#perform the MRGN trio inference with confounding variables
#The PC data used here (pc.meth.pos, pc.gene.pos, sig.pcs.meth, and sig.pcs.gene) are pre-generated from the whole genome data.
#See code at the end for an example of generating PC score matrices and associated PCs.

final.result = analyzeTrios(meth, gene, cna, final.trios.df[1:5,], pc.meth.pos, pc.gene.pos, sig.pcs.meth, sig.pcs.gene, clinical.pos, meth.table.pos, gene.table.pos, age.col=2, race.col=3, nObs = 30, nPCs = 50)
final.result

#You can also write the results to an external file while the function runs

\dontrun{ final.result = analyzeTrios(meth, gene, cna, final.trios.df[1:5,], pc.meth.pos, pc.gene.pos, sig.pcs.meth, sig.pcs.gene, clinical.pos, meth.table.pos, gene.table.pos, age.col=2, race.col=3, writeToFile = TRUE, file = "trio_results.txt")}
 

#When the PC score matrix and significantly associated PCs are not available,
#need to generate them first as follows. 
#The number of methylation probes in the methylation dataset (included with the package) is small in this example. To generate realistic result, we need whole genome data for this function as well as the findPCs() function.

\dontrun{ pc.meth = findPCs(meth, 5, 2, clinical.pos[,1], com.ind, "Pos", 1)
                    pc.gene = findPCs(gene, 3, 1, clinical.pos[,1], com.ind, "Pos", 1)
                    pc.meth.pos.tmp = pc.meth.pos[[1]]
                    pc.gene.pos.tmp = pc.gene.pos[[1]]
                    sig.pcs.meth.tmp = pc.meth.pos[[2]]$sig.asso.covs
                    sig.pcs.gene.tmp = pc.gene.pos[[2]]$sig.asso.covs
                    final.result = analyzeTrios(meth, gene, cna, final.trios.df, pc.meth.pos.tmp, pc.gene.pos.tmp, sig.pcs.meth.tmp, sig.pcs.gene.tmp, clinical.pos, meth.table.pos, gene.table.pos, age.col = 2, race.col = 3, nObs = 30, nPCs = 50)
                    final.result}

}
\seealso{
\code{\link[=infer.trio]{infer.trio()}} used to infer the causal models
}
